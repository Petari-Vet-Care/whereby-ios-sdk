// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name WherebySDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
public protocol WherebyRoomViewControllerDelegate : AnyObject {
  func roomViewControllerDidLeave(_ roomViewController: WherebySDK.WherebyRoomViewController)
}
@objc @_Concurrency.MainActor(unsafe) public class WherebyRoomViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) weak public var delegate: WherebySDK.WherebyRoomViewControllerDelegate?
  @_Concurrency.MainActor(unsafe) public var isMicrophoneEnabled: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public var isCameraEnabled: Swift.Bool {
    get
    set
  }
  @_Concurrency.MainActor(unsafe) public init(config: WherebySDK.WherebyRoomConfig, isPushedInNavigationController: Swift.Bool)
  @available(*, unavailable)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func willMove(toParent parent: UIKit.UIViewController?)
  @objc deinit
  @_Concurrency.MainActor(unsafe) public func join()
}
public enum MediaMode {
  case audioOnly
  case video
  public static func == (a: WherebySDK.MediaMode, b: WherebySDK.MediaMode) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct WherebyRoomConfig {
  public var url: Foundation.URL
  public var mediaMode: WherebySDK.MediaMode?
  public init(url: Foundation.URL, mediaMode: WherebySDK.MediaMode? = nil)
}
extension WherebySDK.MediaMode : Swift.Equatable {}
extension WherebySDK.MediaMode : Swift.Hashable {}
